'use strict';

describe('pos', () => {

  it('数量测试：所有商品都定1份【促销商品都不促销（数量=1）】', () => {

    const tags = [
      'ITEM000000',
      'ITEM000001',
      'ITEM000002',
      'ITEM000003',
      'ITEM000004',
      'ITEM000005',
    ];

    spyOn(console, 'log');

    printReceipt(tags);

    const expectText = `***<没钱赚商店>收据***
名称：可口可乐，数量：1瓶，单价：3.00(元)，小计：3.00(元)
名称：雪碧，数量：1瓶，单价：3.00(元)，小计：3.00(元)
名称：苹果，数量：1斤，单价：5.50(元)，小计：5.50(元)
名称：荔枝，数量：1斤，单价：15.00(元)，小计：15.00(元)
名称：电池，数量：1个，单价：2.00(元)，小计：2.00(元)
名称：方便面，数量：1袋，单价：4.50(元)，小计：4.50(元)
----------------------
总计：33.00(元)
节省：0.00(元)
**********************`;

    expect(console.log).toHaveBeenCalledWith(expectText);
  });

  it('标签形式测试：所有商品都2份，用‘ITEMXXXXX-2’表示【促销商品都促销（数量=2）】', () => {

    const tags = [
      'ITEM000000-2',
      'ITEM000001-2',
      'ITEM000002-2',
      'ITEM000003-2',
      'ITEM000004-2',
      'ITEM000005-2',
    ];

    spyOn(console, 'log');

    printReceipt(tags);

    const expectText = `***<没钱赚商店>收据***
名称：可口可乐，数量：2瓶，单价：3.00(元)，小计：3.00(元)
名称：雪碧，数量：2瓶，单价：3.00(元)，小计：3.00(元)
名称：苹果，数量：2斤，单价：5.50(元)，小计：11.00(元)
名称：荔枝，数量：2斤，单价：15.00(元)，小计：30.00(元)
名称：电池，数量：2个，单价：2.00(元)，小计：4.00(元)
名称：方便面，数量：2袋，单价：4.50(元)，小计：4.50(元)
----------------------
总计：55.50(元)
节省：10.50(元)
**********************`;

    expect(console.log).toHaveBeenCalledWith(expectText);
  });

  it('标签形式测试：所有商品都2份，用‘ITEMXXXXX-2’和‘ITEMXXXXX’&‘ITEMXXXXX’穿插表示【促销商品都促销（数量=2）】', () => {

    const tags = [
      'ITEM000000-2',
      'ITEM000001',
      'ITEM000001',
      'ITEM000002-2',
      'ITEM000003-2',
      'ITEM000004',
      'ITEM000004',
      'ITEM000005-2',
    ];

    spyOn(console, 'log');

    printReceipt(tags);

    const expectText = `***<没钱赚商店>收据***
名称：可口可乐，数量：2瓶，单价：3.00(元)，小计：3.00(元)
名称：雪碧，数量：2瓶，单价：3.00(元)，小计：3.00(元)
名称：苹果，数量：2斤，单价：5.50(元)，小计：11.00(元)
名称：荔枝，数量：2斤，单价：15.00(元)，小计：30.00(元)
名称：电池，数量：2个，单价：2.00(元)，小计：4.00(元)
名称：方便面，数量：2袋，单价：4.50(元)，小计：4.50(元)
----------------------
总计：55.50(元)
节省：10.50(元)
**********************`;

    expect(console.log).toHaveBeenCalledWith(expectText);
  });

  it('数量测试：论斤的商品2.5斤，不论斤的3份【促销商品都促销（数量>2）】', () => {

    const tags = [
      'ITEM000000-3',
      'ITEM000001-3',
      'ITEM000002-2.5',
      'ITEM000003-2.5',
      'ITEM000004-3',
      'ITEM000005-3',
    ];

    spyOn(console, 'log');

    printReceipt(tags);

    const expectText = `***<没钱赚商店>收据***
名称：可口可乐，数量：3瓶，单价：3.00(元)，小计：6.00(元)
名称：雪碧，数量：3瓶，单价：3.00(元)，小计：6.00(元)
名称：苹果，数量：2.5斤，单价：5.50(元)，小计：13.75(元)
名称：荔枝，数量：2.5斤，单价：15.00(元)，小计：37.50(元)
名称：电池，数量：3个，单价：2.00(元)，小计：6.00(元)
名称：方便面，数量：3袋，单价：4.50(元)，小计：9.00(元)
----------------------
总计：78.25(元)
节省：10.50(元)
**********************`;

    expect(console.log).toHaveBeenCalledWith(expectText);
  });

  it('数量综合测试：无论商品是否促销【促销商品中有的促销有的不促销（数量一种<2，一种=2，一种>2）】', () => {

    const tags = [
      'ITEM000000-4',
      'ITEM000001-2',
      'ITEM000002-4',
      'ITEM000003-2',
      'ITEM000004-1',
      'ITEM000005-1',
    ];

    spyOn(console, 'log');

    printReceipt(tags);

    const expectText = `***<没钱赚商店>收据***
名称：可口可乐，数量：4瓶，单价：3.00(元)，小计：9.00(元)
名称：雪碧，数量：2瓶，单价：3.00(元)，小计：3.00(元)
名称：苹果，数量：4斤，单价：5.50(元)，小计：22.00(元)
名称：荔枝，数量：2斤，单价：15.00(元)，小计：30.00(元)
名称：电池，数量：1个，单价：2.00(元)，小计：2.00(元)
名称：方便面，数量：1袋，单价：4.50(元)，小计：4.50(元)
----------------------
总计：70.50(元)
节省：6.00(元)
**********************`;

    expect(console.log).toHaveBeenCalledWith(expectText);
  });

  it('综合测试：随机订商品、数量、和标签形式', () => {

    const tags = [
      'ITEM000001',
      'ITEM000001',
      'ITEM000001',
      'ITEM000001',
      'ITEM000001',
      'ITEM000003-2.5',
      'ITEM000005',
      'ITEM000005-2',
    ];

    spyOn(console, 'log');

    printReceipt(tags);

    const expectText = `***<没钱赚商店>收据***
名称：雪碧，数量：5瓶，单价：3.00(元)，小计：12.00(元)
名称：荔枝，数量：2.5斤，单价：15.00(元)，小计：37.50(元)
名称：方便面，数量：3袋，单价：4.50(元)，小计：9.00(元)
----------------------
总计：58.50(元)
节省：7.50(元)
**********************`;

    expect(console.log).toHaveBeenCalledWith(expectText);
  });


});
